apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'


ext.versionMajor = 1 // 1 to 99
ext.versionMinor = 0 // 0 to 99
ext.versionPatch = 0 // 0 to 999
ext.versionClassifier = null
ext.versionClassifierCodes = ['SNAPSHOT': 0, 'APLHA': 1, 'BETA': 2, 'RC1': 3, 'RC2': 4, 'RELEASE': 5].withDefault {
    0
}
ext.isSnapshot = true
ext.minimumSdkVersion = 19
def isSplitAPK = false

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.example.fakruddin"
        minSdkVersion 16
        targetSdkVersion 29
        versionCode generateVersionCode()
        versionName generateVersionName()
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
    }
    buildTypes {
        debug {
            buildConfigField 'boolean', 'REPORT_CRASHES', 'true'
            buildConfigField 'String', 'BASE_URL', '"https://jsonplaceholder.typicode.com/"'
            buildConfigField 'String', 'API_URL', '"text.com/api/v1/"'
        }
        release {
            minifyEnabled false
            buildConfigField 'String', 'BASE_URL', '"http://test.com/"'
            buildConfigField 'String', 'API_URL', '"http://test.com/api/v1/"'
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    splits {
        density {
            enable isSplitAPK
            exclude 'ldpi', 'tvdpi'
            compatibleScreens 'small', 'normal', 'large', 'xlarge'
        }
    }

    bundle {
        language {
            enableSplit = true
        }
        density {
            enableSplit = true
        }
        abi {
            enableSplit = true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        main {
            res.srcDirs = ['src/main/res']
            assets.srcDirs = ['src/main/assets', 'src/main/assets/']
        }
        debug {
            res.srcDir 'src/debug/res'
        }
    }

    afterEvaluate {
        tasks.withType(JavaCompile.class) {
            options.compilerArgs << "-Xmaxerrs" << "500"
        }
    }

    lintOptions {
        abortOnError false
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }
}
private Integer generateVersionCode() {
    def versionCode = ext.versionMajor * 1000000 + ext.versionMinor * 10000 + ext.versionPatch * 10 + ext.versionClassifierCodes.get(ext.versionClassifier)
    println 'VersionCode ' + versionCode
    return versionCode
}

private String generateVersionName() {
    String versionName = "${ext.versionMajor}.${ext.versionMinor}.${ext.versionPatch}"
    if (ext.versionClassifier == null) {
        if (ext.isSnapshot) {
            ext.versionClassifier = "SNAPSHOT"
        }
    }

    if (ext.versionClassifier != null && ext.versionClassifier != "RELEASE") {
        versionName += "-" + ext.versionClassifier
    }
    println 'VersionName ' + versionName
    return versionName
}

android.applicationVariants.all { variant ->
    variant.outputs.each { output ->
        output.outputFileName = "Fokruddin-${output.versionCode}-${variant.versionName}-${variant.name}.apk"
    }
}
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.core:core-ktx:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'

    // https://github.com/ReactiveX/RxJava
    implementation 'io.reactivex.rxjava2:rxjava:2.2.4'
    // https://github.com/ReactiveX/RxAndroid
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'

    // https://github.com/f2prateek/dart
    implementation "com.f2prateek.dart:dart:$dartVersion"
    annotationProcessor "com.f2prateek.dart:dart-processor:$dartVersion"

    // Glide
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    implementation "com.github.bumptech.glide:okhttp3-integration:$glideVersion"
    annotationProcessor "com.github.bumptech.glide:compiler:$glideVersion"
    kapt 'com.github.bumptech.glide:compiler:4.4.0'

    //  transaction animation
    implementation 'com.andkulikov:transitionseverywhere:1.8.1'


    implementation 'com.squareup.picasso:picasso:2.71828'
    //  transaction animation
    implementation 'com.andkulikov:transitionseverywhere:1.8.1'

    // dimen
    implementation 'com.intuit.sdp:sdp-android:1.0.6'
    implementation 'com.intuit.ssp:ssp-android:1.0.6'

    // https://github.com/romandanylyk/PageIndicatorView
    implementation 'com.romandanylyk:pageindicatorview:1.0.2@aar'

    // https://github.com/Karumi/Dexter
    implementation 'com.karumi:dexter:5.0.0'

    // retrofit https://github.com/square/retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    // retrofit adapter for rx
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"

    //GSON
    implementation 'com.google.code.gson:gson:2.8.5'

    // https://github.com/square/okhttp
    implementation "com.squareup.okhttp3:okhttp:$okHttpVersion"
    // okhttp3 cookie jar https://github.com/franmontiel/PersistentCookieJar
    implementation 'com.github.franmontiel:PersistentCookieJar:v1.0.1'
    // https://github.com/ihsanbal/LoggingInterceptor
    implementation('com.github.ihsanbal:LoggingInterceptor:3.0.0') {
        exclude group: 'org.json', module: 'json'
    }

    // https://github.com/orhanobut/logger
    implementation 'com.orhanobut:logger:2.2.0'


}
